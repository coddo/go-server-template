// Package cookies uses the DatabaseCookieStore type as its default cookie store
// for managing user sessions
package cookies

import (
	"errors"

	"gopkg.in/mgo.v2/bson"
)

// Errors generated by the cookie stores
var (
	ErrInitializationFailed = errors.New("Initialization of the cookie store has failed")
)

const (
	defaultCookieStoreLocation = "cookies"
)

// CookieStore is an interface used for describing entities that can manage
// the location of user sessions (cookies) and performs operations such as
// reading or writing cookie from/to that location
type CookieStore interface {
	ReadCookie(key string) (*Session, error)
	WriteCookie(cookie *Session) error
	DeleteCookie(cookie *Session) error
	GetAllUserCookies(userID bson.ObjectId) ([]*Session, error)
	Init()
}

var defaultCookieStore = &DatabaseCookieStore{location: defaultCookieStoreLocation}
var cookieStore CookieStore = defaultCookieStore

// SetCookieStore sets the cookie store that will be used by the system.
// If this method is not called, the default cookie store will be used
func SetCookieStore(store CookieStore) {
	cookieStore = store
}

// InitCookieStore initializes the currently active cookie store
func InitCookieStore() {
	cookieStore.Init()
}
